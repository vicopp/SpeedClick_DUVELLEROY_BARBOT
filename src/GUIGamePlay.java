

import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class GUIGamePlay extends javax.swing.JFrame {

    Timer timer;
    int totalSecond;
    int score = 0; 
    int currentBtn ;
    private int time_game = 15;
    private int size_matrix = 3;
    private int best_score = -1;
    private final Color defautColor = Color.LIGHT_GRAY;
    private final Color activeColor = Color.BLACK;
    private boolean isGameRunning = false;
    private boolean with_trap = false;
    private final ArrayList<JButton> buttons = new ArrayList<JButton>();
    
    /**
     * Creates new form GUIGamePlay
     */
    public GUIGamePlay() {
        
        initComponents();
        try{
                UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");

        }catch(ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException e) {
            System.err.println("Could not load Windows LAF");
            System.exit(1);                                                             
                                                                                        //problemes affichage pc/mac
        }
        
        setLocationRelativeTo(null);
        setVisible(true);
        
        add(createGridPanel());
        jListTimer.setSelectedIndex(0);
        jListSize.setSelectedIndex(0);
        resetGame();
        
        timer = new Timer(1000, new ActionListener() {
            
        @Override
        public void actionPerformed(ActionEvent e) {
          if (isGameRunning) {
            totalSecond--;
            if (totalSecond > 0) {
              OpponentScore.setText(Integer.toString(totalSecond));
            } else {
                isGameRunning = false;
                OpponentScore.setText("-");
                if (score > best_score ) {
                    best_score = score;
                    jLabelBestScore.setText(Integer.toString( best_score));
                }
              
            }
          }
        }
        });
        timer.setInitialDelay(0);
        timer.start();
        
    }
    
    private JPanel createGridPanel() {
        jPanelMatrix.setLayout(new GridLayout(size_matrix, size_matrix));
        for (int i = 0; i < size_matrix * size_matrix; i++) {
            int row = i / size_matrix;
            int col = i % size_matrix;
            JButton gb = createGridButton(row, col);
            buttons.add(gb);
            jPanelMatrix.add(gb);
        }
        return jPanelMatrix;
    }

     private JButton getGridButton(int r, int c) {
        int index = r * size_matrix + c;
        return buttons.get(index);
    }

    private JButton createGridButton(final int row, final int col) {
        int cur = (size_matrix *(row-1)+ col) + size_matrix;
        final JButton b = new JButton("" + cur);
        
        b.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                JButton gb = getGridButton(row, col);
                if (cur == currentBtn) win();
                else loose();
            }
        });
        return b;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelScore = new javax.swing.JPanel();
        SCORE_label = new javax.swing.JLabel();
        YOU_label = new javax.swing.JLabel();
        OPPONENT_label = new javax.swing.JLabel();
        PlayerScore = new javax.swing.JLabel();
        OpponentScore = new javax.swing.JLabel();
        CURR_TURN_label = new javax.swing.JLabel();
        jPanelOptions = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBoxTrap = new javax.swing.JCheckBox();
        jButtonInfo = new javax.swing.JButton();
        ResetGame = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabelBestScore = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListTimer = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSize = new javax.swing.JList<>();
        jPanelMatrix = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));

        jPanelScore.setBackground(new java.awt.Color(255, 255, 255));

        SCORE_label.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        SCORE_label.setText("SCORE");

        YOU_label.setBackground(new java.awt.Color(0, 0, 0));
        YOU_label.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        YOU_label.setText("Score :");

        OPPONENT_label.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        OPPONENT_label.setText("Time : ");

        PlayerScore.setBackground(new java.awt.Color(0, 0, 0));
        PlayerScore.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        PlayerScore.setText("0");

        OpponentScore.setBackground(new java.awt.Color(0, 0, 0));
        OpponentScore.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        OpponentScore.setText("0");

        javax.swing.GroupLayout jPanelScoreLayout = new javax.swing.GroupLayout(jPanelScore);
        jPanelScore.setLayout(jPanelScoreLayout);
        jPanelScoreLayout.setHorizontalGroup(
            jPanelScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelScoreLayout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addComponent(SCORE_label)
                .addGap(72, 72, 72)
                .addComponent(OPPONENT_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(OpponentScore, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(YOU_label, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayerScore, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanelScoreLayout.setVerticalGroup(
            jPanelScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelScoreLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanelScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(OPPONENT_label, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(OpponentScore, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(YOU_label, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PlayerScore, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SCORE_label, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        CURR_TURN_label.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        CURR_TURN_label.setText("Click speed - Game");

        jPanelOptions.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setText("Taille de la Grille");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setText("Ajouter des pi√®ges");

        jCheckBoxTrap.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N

        jButtonInfo.setBackground(new java.awt.Color(255, 255, 204));
        jButtonInfo.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jButtonInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-info-carre-30.png"))); // NOI18N
        jButtonInfo.setText("Info");
        jButtonInfo.setToolTipText("");
        jButtonInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInfoActionPerformed(evt);
            }
        });

        ResetGame.setBackground(new java.awt.Color(242, 242, 242));
        ResetGame.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        ResetGame.setText("Reset game");
        ResetGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetGameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel4.setText("Temps du jeu (Sec.)");

        jLabelBestScore.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabelBestScore.setText("-");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel5.setText("Meilleur Score");

        jListTimer.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "15", "30", "60" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListTimer.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListTimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListTimerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListTimer);

        jListSize.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "3", "4", "5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListSize.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListSizeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListSize);

        javax.swing.GroupLayout jPanelOptionsLayout = new javax.swing.GroupLayout(jPanelOptions);
        jPanelOptions.setLayout(jPanelOptionsLayout);
        jPanelOptionsLayout.setHorizontalGroup(
            jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOptionsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOptionsLayout.createSequentialGroup()
                        .addComponent(jButtonInfo)
                        .addGap(18, 18, 18)
                        .addComponent(ResetGame, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelOptionsLayout.createSequentialGroup()
                        .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOptionsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelBestScore, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelOptionsLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jCheckBoxTrap)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelOptionsLayout.createSequentialGroup()
                        .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(44, 44, 44)
                        .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(80, Short.MAX_VALUE))))
        );
        jPanelOptionsLayout.setVerticalGroup(
            jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOptionsLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelOptionsLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29))
                    .addGroup(jPanelOptionsLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxTrap)
                    .addComponent(jLabel2))
                .addGap(59, 59, 59)
                .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBestScore)
                    .addComponent(jLabel5))
                .addGap(37, 37, 37)
                .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ResetGame, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInfo))
                .addGap(64, 64, 64))
        );

        jPanelMatrix.setBackground(new java.awt.Color(255, 255, 255));
        jPanelMatrix.setMaximumSize(new java.awt.Dimension(400, 400));
        jPanelMatrix.setMinimumSize(new java.awt.Dimension(400, 400));
        jPanelMatrix.setPreferredSize(new java.awt.Dimension(400, 400));

        javax.swing.GroupLayout jPanelMatrixLayout = new javax.swing.GroupLayout(jPanelMatrix);
        jPanelMatrix.setLayout(jPanelMatrixLayout);
        jPanelMatrixLayout.setHorizontalGroup(
            jPanelMatrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanelMatrixLayout.setVerticalGroup(
            jPanelMatrixLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 403, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(204, 204, 204)
                        .addComponent(CURR_TURN_label))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanelMatrix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CURR_TURN_label, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelMatrix, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ResetGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetGameActionPerformed
        // TODO add your handling code here:
        resetGame();
    }//GEN-LAST:event_ResetGameActionPerformed

  
    private void jButtonInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInfoActionPerformed
        // TODO add your handling code here:
        
        JOptionPane.showMessageDialog(new JFrame(),
                "Speed click est un jeu graphique √† un joueur chronom√©tr√© !\n"
                        + "L'objectif est de r√©aliser le score le plus haut.\n" 
                        + "Il faut cliquer sur un maximum de boutons allum√©s dans le temps imparti. A la fin de la partie, un score s'affiche, et on peut recommencer pour essayer de battre son record.",
                "SpeedClick - Information",
            JOptionPane.INFORMATION_MESSAGE );
    }//GEN-LAST:event_jButtonInfoActionPerformed

    private void jListTimerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListTimerMouseClicked
        // TODO add your handling code here:
        time_game = Integer.parseInt(jListTimer.getSelectedValue().toString());
        resetGame();
    }//GEN-LAST:event_jListTimerMouseClicked

    private void jListSizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListSizeMouseClicked
        // TODO add your handling code here:
        size_matrix = Integer.parseInt(jListSize.getSelectedValue().toString());
        
        jPanelMatrix.removeAll();
        buttons.removeAll(buttons);
        add(createGridPanel());
        jPanelMatrix.repaint();
        
        resetGame();
    }//GEN-LAST:event_jListSizeMouseClicked
    
    private void process_score(int current_result) {
        if (totalSecond > 0) {
            isGameRunning = true;
            score=score+current_result;
            PlayerScore.setText(Integer.toString(score));
            this.get_random_number();
        }
    }
    private void win() {
        System.out.println("GUIGamePlay.win()");
        process_score(+1);
    }
    
    private void loose (){
        System.out.println("GUIGamePlay.loose()");
        process_score(-1);
    }
        
    private void get_random_number(){
        currentBtn = new Random().nextInt(size_matrix*size_matrix);
                //currentBtn = SIZE_MATRIX*(yValue-1)+ xValue;
        this.reset_buttons();
        this.set_ButtonColor();
    }
    
    private void set_ButtonColor() {
        
        if (jCheckBoxTrap.isSelected())
        {
            int percentTrap = (int)(Math.random() * (10-1)) + 1;
            int trapBtn = new Random().nextInt(size_matrix*size_matrix);
            if (percentTrap<=1) {
                
                JButton btn = buttons.get(trapBtn);
                btn.setBackground(Color.RED);
                btn.setForeground(Color.WHITE);
                btn.setOpaque(true);
                btn.setBorderPainted(false);
            }
        }
    
        JButton btn = buttons.get(currentBtn);
        btn.setBackground(activeColor);
        btn.setForeground(Color.WHITE);
        btn.setOpaque(true);
        btn.setBorderPainted(false);
    }

    private void resetGame() {
        System.out.println("------** Reset Game **--------");
        this.get_random_number();
        isGameRunning = false;
        score = 0;
        totalSecond = time_game;
        OpponentScore.setText(Integer.toString(totalSecond));
        PlayerScore.setText(Integer.toString(score));           
        
    }
    
    private void reset_buttons() {
       
        for(int i=0; i<buttons.size(); i++)
        {
                JButton btn = buttons.get(i);
                //JButton button = buttons[i];
                btn.setBackground(defautColor);
                btn.setForeground(Color.BLACK);
                btn.setOpaque(true);
                btn.setBorderPainted(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CURR_TURN_label;
    private javax.swing.JLabel OPPONENT_label;
    private javax.swing.JLabel OpponentScore;
    private javax.swing.JLabel PlayerScore;
    private javax.swing.JButton ResetGame;
    private javax.swing.JLabel SCORE_label;
    private javax.swing.JLabel YOU_label;
    private javax.swing.JButton jButtonInfo;
    private javax.swing.JCheckBox jCheckBoxTrap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelBestScore;
    private javax.swing.JList<String> jListSize;
    private javax.swing.JList<String> jListTimer;
    private javax.swing.JPanel jPanelMatrix;
    private javax.swing.JPanel jPanelOptions;
    private javax.swing.JPanel jPanelScore;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
